// <auto-generated />
using System;
using Cis.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cis.Data.Migrations
{
    [DbContext(typeof(CisDbContext))]
    [Migration("20201125020108_CisPosInit")]
    partial class CisPosInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Cis.Model.Batch", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("BatchCode")
                        .IsRequired()
                        .HasColumnName("BATCH_CODE")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CREATED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("text");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnName("ENTRY_DATE")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnName("EXPIRED_DATE")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnName("MODIFIED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnType("text");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnName("PRODUCT_ID")
                        .HasColumnType("varchar(36)");

                    b.Property<int>("Quantity")
                        .HasColumnName("QTY")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BatchCode")
                        .IsUnique()
                        .HasName("IX_BATCH_CODE");

                    b.HasIndex("ProductId");

                    b.ToTable("BATCH");
                });

            modelBuilder.Entity("Cis.Model.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("ADDRESS")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CREATED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("text");

                    b.Property<string>("DistrictId")
                        .IsRequired()
                        .HasColumnName("DISTRICT_ID")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnName("MODIFIED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Npwp")
                        .HasColumnName("NPWP")
                        .HasColumnType("text");

                    b.Property<string>("OutletTypeId")
                        .IsRequired()
                        .HasColumnName("OUTLET_TYPE_ID")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("PharmacistName")
                        .HasColumnName("PHARMACIST_NAME")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnName("PHONE")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnName("POSTAL_CODE")
                        .HasColumnType("text");

                    b.Property<string>("ProvinceId")
                        .IsRequired()
                        .HasColumnName("PROVINCE_ID")
                        .HasColumnType("text");

                    b.Property<string>("SalesAreaId")
                        .IsRequired()
                        .HasColumnName("SALES_AREA_ID")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("SiaNo")
                        .HasColumnName("SIA_NO")
                        .HasColumnType("text");

                    b.Property<DateTime>("SipaExpiredDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SIPA_EXP_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("SipaNo")
                        .HasColumnName("SIPA_NO")
                        .HasColumnType("text");

                    b.Property<string>("SubDistrictId")
                        .IsRequired()
                        .HasColumnName("SUBDISTRICT_ID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .HasName("IX_CUST_NAME");

                    b.HasIndex("OutletTypeId");

                    b.HasIndex("SalesAreaId");

                    b.ToTable("CUSTOMER");
                });

            modelBuilder.Entity("Cis.Model.Location", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CREATED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("text");

                    b.Property<byte>("LocationType")
                        .HasColumnName("LOC_TYPE")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnName("MODIFIED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ParentId")
                        .IsRequired()
                        .HasColumnName("PARENT_LOC_ID")
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .HasName("IX_LOC_NAME");

                    b.HasIndex("ParentId");

                    b.ToTable("LOCATION");
                });

            modelBuilder.Entity("Cis.Model.MedicineCat", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CREATED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("text");

                    b.Property<string>("MedicineCatCode")
                        .IsRequired()
                        .HasColumnName("MED_CAT_CODE")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnName("MODIFIED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MED_CAT");
                });

            modelBuilder.Entity("Cis.Model.OutletType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CREATED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnName("MODIFIED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnType("text");

                    b.Property<string>("OutletCode")
                        .IsRequired()
                        .HasColumnName("OUTLET_CODE")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OUTLET_TYPE");
                });

            modelBuilder.Entity("Cis.Model.PermissionRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("AccessUnit")
                        .IsRequired()
                        .HasColumnName("ACCESS_UNIT")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CREATED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnName("MODIFIED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnName("ROLE_ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.HasIndex("RoleId", "AccessUnit")
                        .IsUnique()
                        .HasName("IX_ROLE_ID_ACCESS_UNIT");

                    b.ToTable("PERMISSION_ROLE");
                });

            modelBuilder.Entity("Cis.Model.Principal", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("ADDRESS")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CREATED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("text");

                    b.Property<string>("DistrictId")
                        .IsRequired()
                        .HasColumnName("DISTRICT_ID")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnName("MODIFIED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasColumnName("PHONE")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<string>("ProvinceId")
                        .IsRequired()
                        .HasColumnName("PROVINCE_ID")
                        .HasColumnType("text");

                    b.Property<string>("SubDistrictId")
                        .IsRequired()
                        .HasColumnName("SUBDISTRICT_ID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .HasName("IX_PRINCIPAL_NAME");

                    b.ToTable("PRINCIPAL");
                });

            modelBuilder.Entity("Cis.Model.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CREATED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("text");

                    b.Property<float>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DISCOUNT")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<string>("MedicineCatId")
                        .IsRequired()
                        .HasColumnName("MED_CAT_ID")
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnName("MODIFIED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PRICE")
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("PriceDecreeDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PRICE_DEC_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("PrincipalId")
                        .IsRequired()
                        .HasColumnName("PRINCIPAL_ID")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnName("PRODUCT_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnName("PRODUCT_NAME")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("RestockLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RESTOCK_LEVEL")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("UnitId")
                        .IsRequired()
                        .HasColumnName("UNIT_ID")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("UsageTypeId")
                        .IsRequired()
                        .HasColumnName("USAGE_TYPE_ID")
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("MedicineCatId");

                    b.HasIndex("PrincipalId");

                    b.HasIndex("ProductCode")
                        .IsUnique()
                        .HasName("IX_PRODUCT_CODE");

                    b.HasIndex("ProductName")
                        .HasName("IX_PRODUCT_NAME");

                    b.HasIndex("UnitId");

                    b.HasIndex("UsageTypeId");

                    b.ToTable("PRODUCT");
                });

            modelBuilder.Entity("Cis.Model.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CREATED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnName("MODIFIED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnType("text");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasColumnName("ROLE_CODE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("RoleCode")
                        .IsUnique()
                        .HasName("IX_ROLE_CODE");

                    b.ToTable("ROLE");
                });

            modelBuilder.Entity("Cis.Model.SalesArea", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasColumnName("AREA_CODE")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CREATED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnName("MODIFIED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SALES_AREA");
                });

            modelBuilder.Entity("Cis.Model.Salesman", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Address")
                        .HasColumnName("ADDRESS")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CREATED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("text");

                    b.Property<string>("DistrictId")
                        .IsRequired()
                        .HasColumnName("DISTRICT_ID")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnName("FULL_NAME")
                        .HasColumnType("text");

                    b.Property<byte>("Gender")
                        .HasColumnName("GENDER")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnName("MODIFIED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnName("PHONE")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnName("POSTAL_CODE")
                        .HasColumnType("text");

                    b.Property<string>("ProvinceId")
                        .IsRequired()
                        .HasColumnName("PROVINCE_ID")
                        .HasColumnType("text");

                    b.Property<string>("SalesmanCode")
                        .IsRequired()
                        .HasColumnName("SALESMAN_CODE")
                        .HasColumnType("text");

                    b.Property<string>("SubDistrictId")
                        .IsRequired()
                        .HasColumnName("SUBDISTRICT_ID")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SALESMAN");
                });

            modelBuilder.Entity("Cis.Model.UnitOfMeasurement", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CREATED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnName("MODIFIED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnType("text");

                    b.Property<string>("UomCode")
                        .IsRequired()
                        .HasColumnName("UOM_CODE")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UOM");
                });

            modelBuilder.Entity("Cis.Model.UsageType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CREATED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnName("MODIFIED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnType("text");

                    b.Property<string>("UsageTypeCode")
                        .IsRequired()
                        .HasColumnName("USAGE_TYPE_CODE")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("USAGE_TYPE");
                });

            modelBuilder.Entity("Cis.Model.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CREATED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnName("FULL_NAME")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnName("MODIFIED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("PASSWORD")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("USER_NAME")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("USER");
                });

            modelBuilder.Entity("Cis.Model.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CREATED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("CREATED_BY")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnName("MODIFIED_AT")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("MODIFIED_BY")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnName("ROLE_ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnName("USER_ID")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("RoleId", "UserId")
                        .IsUnique()
                        .HasName("IX_USER_ROLE_ROLE_ID_USER_ID");

                    b.ToTable("USER_ROLE");
                });

            modelBuilder.Entity("Cis.Model.Batch", b =>
                {
                    b.HasOne("Cis.Model.Product", "Product")
                        .WithMany("Batches")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cis.Model.Customer", b =>
                {
                    b.HasOne("Cis.Model.OutletType", "OutletType")
                        .WithMany("Customers")
                        .HasForeignKey("OutletTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cis.Model.SalesArea", "SalesArea")
                        .WithMany("Customers")
                        .HasForeignKey("SalesAreaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cis.Model.Location", b =>
                {
                    b.HasOne("Cis.Model.Location", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cis.Model.PermissionRole", b =>
                {
                    b.HasOne("Cis.Model.Role", "Role")
                        .WithMany("PermissionRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cis.Model.Product", b =>
                {
                    b.HasOne("Cis.Model.MedicineCat", "MedicineCat")
                        .WithMany("Products")
                        .HasForeignKey("MedicineCatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cis.Model.Principal", "Principal")
                        .WithMany("Products")
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cis.Model.UnitOfMeasurement", "Unit")
                        .WithMany("Products")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cis.Model.UsageType", "UsageType")
                        .WithMany("Products")
                        .HasForeignKey("UsageTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cis.Model.UserRole", b =>
                {
                    b.HasOne("Cis.Model.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cis.Model.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
